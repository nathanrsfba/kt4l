#!/usr/bin/python3

from mutagen.id3 import ID3, TXXX, TPE1, TIT2
from mutagen.easyid3 import EasyID3
import argparse

parser=argparse.ArgumentParser(
        prog='tag', 
        description='Add ID2 tags for radio functions',
        epilog="Notes:\n" +
        "START and END may be specified as seconds, or in " +
        "MM:SS format. Additionally, END may be negative which, " +
        "similar to Python indexes, specifies a number of seconds from " +
        "the *end* of the track.\n\n" +
        "START, END, FADE_IN and FADE_OUT may be blank strings, " +
        "in which case, the corresponding tag will be deleted."
        )

parser.add_argument( 'files', nargs='+', help='Files to tag' ) 
parser.add_argument( '-s', '--start',
                    help='Time to start playing at' ) 
parser.add_argument( '-e', '--end',
                    help='Time to stop playing at' ) 
parser.add_argument( '-i', '--fade-in',
                    help='Number of seconds to fade in at start' )
parser.add_argument( '-o', '--fade-out',
                    help='Number of seconds to fade out at end' )
parser.add_argument( '-S', '--skip', action='store_true',
                    help='Never play this track' )
parser.add_argument( '-d', '--display', action='store_true',
                    help='Display the display artist and title' )
parser.add_argument( '-a', '--artist',
                    help='Set display artist' )
parser.add_argument( '-A', '--append-artist',
                    help='Append to display artist' )
parser.add_argument( '-t', '--title',
                    help='Set display title' )
parser.add_argument( '-T', '--append-title',
                    help='Append to display title' )
parser.add_argument( '--no-skip', action='store_true', 
                    help='Turn off skip' )
parser.add_argument( '-F', '--follow', action='store_true',
                    help='Always and only play this after preceeding track' )
parser.add_argument( '--no-follow', action='store_true', 
                    help='Turn off follow' )

opts = parser.parse_args()

if( opts.artist != '' or opts.title != '' or
   opts.append_artist or opts.append_title ):
    opts.display = True

if not opts.display:
    fields = ('Start', 'End', 'FadeIn', 'FadeOut', 'Skip', 'Follow')
    print( "%5s %5s %6s %7s %4s %6s File" % fields )
else:
    dfields = ('Disp. Artist', 'Disp. Title')
    print( "%-25s %-25s File" % dfields )

for file in opts.files:
    data = ID3( file )
    easy = EasyID3( file )

    changed = False
    def setTag( tag, opt ):
        global changed
        if opt == '' and f'TXXX:{tag}' in data:
            del data[f'TXXX:{tag}']
            changed = True
        elif opt:
            data.add( TXXX( desc=tag, text=[opt] ))
            changed = True

    setTag( 'Start', opts.start )
    setTag( 'End', opts.end )
    setTag( 'FadeIn', opts.fade_in )
    setTag( 'FadeOut', opts.fade_out )

    def setBoolean( tag, trueVal, falseVal ):
        global changed
        if trueVal:
            data.add( TXXX( desc=tag, text=['1'] ))
            changed = True
        if falseVal:
            data.add( TXXX( desc=tag, text=['0'] ))
            changed = True

    if opts.artist != None:
        setTag( 'Display Artist', opts.artist )
    if opts.append_artist:
        setTag( 'Display Artist', f"{easy['artist'][0]} {opts.append_artist}" )
    if opts.title != None:
        setTag( 'Display Title', opts.title )
    if opts.append_title:
        setTag( 'Display Title', f"{easy['title'][0]} {opts.append_title}" )

    setBoolean( 'Skip', opts.skip, opts.no_skip )
    setBoolean( 'Follow', opts.follow, opts.no_follow )

    if changed: data.save()

    if not opts.display:
        info = []
        for tag in fields:
            if f'TXXX:{tag}' in data:
                info.append( data[f"TXXX:{tag}"].text[0] )
            else:
                info.append( '-' )
        info.append( file )
        print( "%5s %5s %6s %7s %4s %6s %s" % tuple( info ))
    else:
        definfo = [easy['artist'][0], easy['title'][0]]
        info = []
        for tag in ('Display Artist', 'Display Title'):
            if f'TXXX:{tag}' in data:
                info.append( data[f"TXXX:{tag}"].text[0] )
            else:
                info.append( f"*{definfo[0]}" )
            definfo.pop( 0 )
        info.append( file )
        print( "%-25s %-25s %s" % tuple( info ))
    # print( f'{file}: {info}' )



# 
# 
# print( data )
# del data['TXXX:test']
# data.save()



